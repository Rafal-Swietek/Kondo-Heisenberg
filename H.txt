
void HamiltonianKH::Hamiltonian() {
	int s_i, s_j; //i=j, j=j+1
	int idx = 0; //indices equivalent to spin-filp due to kinetic term
	bool PBC = 0; //allows periodic boundary conditions if =1
	int next_j;
	for (int k = 0; k < N; k++) {
		base_vector = int_to_binary(mapping_inv[k], L);
		vector<int> temp = base_vector;
		for (int j = 0; j <= L - 1; j++) { //to delete PBC change to: j < L-1
			if (PBC == 1 && j == L - 1) next_j = 0;
			else next_j = j + 1;
			if ((PBC == 1) || (PBC == 0 && j < L - 1)) {
				// Diagonal spin part
				// i
				if (base_vector[j] < 4) s_i = 1;
				else s_i = 0;
				// PBC = i+1 : (N-1)+1 = 0
				if (base_vector[next_j] < 4) s_j = 1;
				else s_j = 0;
				H(k, k) += K * (s_i - 0.5) * (s_j - 0.5); // "potential" term - diagonal part, spin s_z_i = eigenvector[i] - 1/2
			//Kinetic spin part: S+ S-
				if (s_i == 0 && s_j == 1) { // S_i^+ S_i+1^-
					temp[j] = base_vector[j] - 4; //spin filp
					temp[next_j] = base_vector[next_j] + 4;
					idx = mapping[binary_to_int(temp)];
					H(idx, k) += K / 2.;
				}
				temp = base_vector;
				if (s_i == 1 && s_j == 0) { // S_i^- S_i+1^+
					temp[j] = base_vector[j] + 4; //spin filp
					temp[next_j] = base_vector[next_j] - 4;
					idx = mapping[binary_to_int(temp)];
					H(idx, k) += K / 2.;
				}
				//---------------------
				// electron hopping
					//spin up
				temp = base_vector;
				if (base_vector[next_j] % 2 == 1) { //only odd numbers have up-electrons
					if (base_vector[j] % 2 == 0) {//even numbers lack one up-electron
						temp[next_j] -= 1; // anihilate spin-up electron
						temp[j] += 1; // create spin-up electron
						idx = mapping[binary_to_int(temp)];
						H(idx, k) += t;
						H(k, idx) += t;
					}
				}
				//spin down
				temp = base_vector;
				// the if statement contains every possible electron hopping j->next_j
				if (base_vector[next_j] == 2 || base_vector[next_j] == 3 || base_vector[next_j] == 6 || base_vector[next_j] == 7) {
					if (base_vector[j] == 0 || base_vector[j] == 1 || base_vector[j] == 4 || base_vector[j] == 5) {
						temp[next_j] -= 2; // anihilate spin-down electron
						temp[j] += 2; // create spin-down electron
						idx = mapping[binary_to_int(temp)];
						H(idx, k) += t;
						H(k, idx) += t;
					}
				}
			}
			//---------------------
			// electron repulsion
			if (base_vector[j] == 3 || base_vector[j] == 7) H(k, k) += U;
			//--------------------
			// electron-localised spin interaction ( interorbital electronic spin interaction)
			temp = base_vector;
			if (base_vector[j] == 5) {
				temp[j] = 2;
				idx = mapping[binary_to_int(temp)];
				H(idx, k) += -J_H;
			}
			else if (base_vector[j] == 2) {
				temp[j] = 5;
				idx = mapping[binary_to_int(temp)];
				H(idx, k) += -J_H;
			}
			//Diagonal - z part
			if (base_vector[j] == 1 || base_vector[j] == 6)
				H(k, k) += -2 * J_H * 0.25;
			if (base_vector[j] == 2 || base_vector[j] == 5)
				H(k, k) += 2 * J_H * 0.25;
			//--------------------

		}
		temp.~vector();
	}
}